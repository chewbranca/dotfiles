---
- hosts: all
  vars:
#    ansible_python_interpreter: "/usr/local/bin/python2"
    git_email: "chewbranca@apache.org"

  tasks:

    #- name: Add Debian backports
    #  apt_repository: repo="deb http://http.debian.net/debian wheezy-backports main" state=present
    #  become: true
    #  when: ansible_distribution == 'Debian'

    #- name: Add Erlang Solutions Apt repo
    #  apt_repository: repo="deb http://packages.erlang-solutions.com/debian wheezy contrib" state=present
    #  become: true

    #- name: Add Erlang Solutions Apt key
    #  apt_key: url="http://packages.erlang-solutions.com/debian/erlang_solutions.asc" state=present
    #  become: true

    #- name: Update apt-cache
    #  apt: update_cache=yes
    #  become: true

    #- name: Install Emacs24 on Debian
    #  apt: name=emacs24-nox state=latest default_release=wheezy-backports
    #  become: true
    #  when: ansible_distribution == 'Debian'

    - name: Install libcurl on Debian
      #apt: name=libcurl4-openssl-dev state=latest default_release=wheezy-backports
      apt: name=libcurl4-openssl-dev state=latest
      become: true
      when: ansible_distribution == 'Debian'

    - name: Install Emacs24 on Ubuntu
      apt: name=emacs24-nox state=latest
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install libcurl on Ubuntu
      apt: name=libcurl4-openssl-dev
      become: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install deps
      apt: name={{ item }} state=latest update_cache=yes
      with_items:
        - build-essential
        - git
        - vim-nox
        - libssl1.0.0
        - libssl-dev
        - zlib1g
        - zlib1g-dev
        - lsb-base
        - ncurses-dev
        - libncurses-dev
        - libmozjs185-dev
        - libicu-dev
        - xsltproc
        - libxml2-dev
        - libxslt1-dev
        - tmux
        - haproxy
        # - apt-transport-s3
        - exuberant-ctags

        # - erlang
        - tree
        - python-pip
        - python-dev

        # systems performance analysis
        - sysstat
        - strace
        - gcc-multilib # to use libc6-i386 and others
        - libc6-i386 # nicstat dep
        - tcpdump
        - iptraf-ng
        - iotop
        - linux-tools-3.16

        # erln8 deps
        - fop
        - unixodbc-dev
        - libglib2.0-dev
        - autoconf

        # systemtap deps
        - gettext
        - libdw-dev

      become: true

    #- name: Install Erlang 17.5.3
    #  apt: name=esl-erlang=1:17.5.3 state=present update_cache=yes
    #  become: true

    - file: path=/home/{{ ansible_ssh_user }}/src state=directory
    - file: path=/home/{{ ansible_ssh_user }}/bin state=directory

    - name: Install netrc
      copy: src=files/netrc dest=/home/{{ ansible_ssh_user }}/.netrc mode=0400


    - name: Clone dotfiles repo
      git: repo="https://github.com/chewbranca/dotfiles.git"
           dest=/home/{{ ansible_ssh_user }}/src/dotfiles
           update=no
           clone=yes
           accept_hostkey=yes

    - name: Link configs
      file: src=/home/{{ ansible_ssh_user }}/src/dotfiles/{{ item.path }}
            dest=/home/{{ ansible_ssh_user }}/{{ item.dest }}
            state=link
            owner={{ ansible_ssh_user }}
            group={{ ansible_ssh_user }}
      with_items:
        - { path: 'tmux.conf', dest: '.tmux.conf' }
        - { path: 'emacs.d', dest: '.emacs.d' }

    - name: Erlang cookie
      copy: src=files/erlang.cookie dest=/home/{{ ansible_ssh_user }}/.erlang.cookie

    - name: Git config
      template: src=templates/gitconfig.j2 dest=/home/{{ ansible_ssh_user }}/.gitconfig

    - name: Git ignore
      copy: src=files/gitignore_global dest=/home/{{ ansible_ssh_user }}/.gitignore_global

    # - name: Fetch rebar
    #   get_url: url=https://github.com/rebar/rebar/wiki/rebar
    #            dest=/home/{{ ansible_ssh_user }}/bin/rebar

    # - name: Make rebar executable
    #   file: path=/home/{{ ansible_ssh_user }}/bin/rebar mode=0755

    - name: Fetch CouchDB
      git: repo="https://github.com/apache/couchdb.git"
           dest=/home/{{ ansible_ssh_user }}/src/couchdb
           update=no
           clone=yes

    # install Erlang
    # - include: erln8.yml

    # - name: CouchDB .edts file
    #   copy: src=files/couchdb_edts dest=/home/{{ ansible_ssh_user }}/src/couchdb/.edts

    # - name: Fetch EDTS
    #   git: repo="https://github.com/chewbranca/edts.git"
    #        dest=/home/{{ ansible_ssh_user }}/src/dotfiles/emacs.d/plugins/edts
    #        update=no
    #        clone=yes
    #        accept_hostkey=yes

    # - name: Build EDTS
    #   # FIXME: .gitmodule should switch to the branch
    #   shell: 'cd /home/{{ ansible_ssh_user }}/src/dotfiles/emacs.d/plugins/edts; git checkout chewbranca-hacks; make'
    #   run_once: true

    - name: Install pip modules
      pip: name={{ item }}
      with_items:
        - requests
        - grequests
      become: true

    # install Ruby
    # - include: ruby.yml

    - include: vim.yml
